# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.



#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
        shotgun_entity_type: Step
        shotgun_field_name: code
    sg_asset_type:
        type: str
    Asset:
        type: str
    name:
        type: str
        #filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    version_two:
       type: int
       format_spec: "02"
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric

    SEQ:
        type: sequence
        format_spec: "04"

    # Represents a frame sequence exported from Flame
    flame.frame:
        type: sequence
        format_spec: "08"

    eye:
        type: str

    houdini.node:
        alias: node
        type: str
    aov_name:
        type: str

    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str

    # These are used for the Mari UDIM pipeline:
    UDIM:
        type: sequence
        default: "<UDIM>"
    mari.channel:
        type: str
        alias: channel
    mari.layer:
        type: str
        alias: layer
    mari.project_name:
        type: str
        alias: name
    asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    task_name:
        type: str
        shotgun_entity_type: Task
        shotgun_field_name: content

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: mb
        alias: extension
    tail:
        type: str
    asset_namespace:
        type: str

    shot_file_extension:
        type: str
        choices:
            usd: USD
            abc: Alembic
            ma: Maya Ascii
            mb: Maya Binary
    number:
        type: int

    # These are used by the Loader in Unreal
    sg_asset_type_ue4:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: sg_asset_type
    sg_asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    sg_shot_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: code
    sg_sequence_name:
        type: str
        shotgun_entity_type: Shot
        shotgun_field_name: sg_sequence

    # These are used by the Movie Publish in Unreal
    level_sequence:
        type: str
    world:
        type: str
#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    shot_root: seq/{Sequence}/{Shot}/{Step}
    asset_root: assets/{sg_asset_type}/{Asset}/{Step}
    sequence_root: seq/{Sequence}


    ##########################################################################################
    # Project level paths
    #

    #
    # Hiero
    #

    # The location of WIP files
    hiero_project_work:
        definition: 'editorial/dev/{name}_v{version}.hrox'
    hiero_project_work_area:
        definition: 'editorial/dev'
    # The location of backups of WIP files
    hiero_project_snapshot:
        definition: 'editorial/dev/snapshots/{name}_v{version}_{timestamp}.hrox'
    # The location of published hiero files
    hiero_project_publish:
        definition: 'editorial/pub/{name}_v{version}.hrox'
    hiero_project_publish_area:
        definition: 'editorial/pub'


    ##########################################################################################
    # Sequence level paths
    #


    ##########################################################################################
    # Shot level paths
    #

    #
    # Flame
    #

    flame_segment_clip:
        definition: 'sequences/{Sequence}/{Shot}/finishing/clip/sources/{segment_name}.clip'
    flame_shot_clip:
        definition: 'sequences/{Sequence}/{Shot}/finishing/clip/{Shot}.clip'
    flame_shot_batch:
        definition: 'sequences/{Sequence}/{Shot}/finishing/batch/{Shot}.v{version}.batch'
    flame_shot_render_dpx:
        definition: 'sequences/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_render_exr:
        definition: 'sequences/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'
    flame_shot_comp_dpx:
        definition: 'sequences/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_comp_exr:
        definition: 'sequences/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'

    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_shot_work:
        definition: '@shot_root/dev/photoshop/{Shot}_{Step}_v{version}[_{name}].psd'
    shot_work_area_photoshop:
        definition: '@shot_root/dev/photoshop'
    # The location of backups of WIP files
    photoshop_shot_snapshot:
        definition: '@shot_root/dev/photoshop/snapshots/{Shot}_{Step}_v{version}[_{name}].{timestamp}.psd'
    # The location of published files
    shot_publish_area_photoshop:
        definition: '@shot_root/pub/photoshop'
    photoshop_shot_publish:
        definition: '@shot_root/pub/photoshop/{Shot}_{Step}_v{version}[_{name}].psd'


    #
    # Maya
    #

    # define the location of a work area
    shot_work_area_maya:
        definition: '@shot_root/dev/maya'
    # define the location of a publish area
    shot_publish_area_maya:
        definition: '@shot_root/pub/maya'
    # The location of WIP files
    maya_shot_work:
        definition: '@shot_root/dev/maya/{Shot}_{Step}_v{version}[_{name}].{maya_extension}'
    # The location of backups of WIP files
    maya_shot_snapshot:
        definition: '@shot_root/dev/maya/snapshots/{Shot}_{Step}_v{version}[_{name}].{timestamp}.{maya_extension}'
    maya_shot_ziva_cache:
        definition: '@shot_root/dev/maya/ziva/{name}_v{version}/{name}_v{version}.{SEQ}.zCache'
    # The location of published maya files
    maya_shot_publish:
        definition: '@shot_root/pub/maya/{Shot}_{Step}_v{version}[_{name}].{maya_extension}' 
    # The location of published shot alembic
    maya_shot_alembic:
        definition: '@shot_root/pub/almebic/{name}.abc'
    maya_shot_mov:
        definition: '@shot_root/pub/preview/{Shot}_{Step}_v{version}[_{name}].mp4'    

    #
    # Katana
    #

    # define the location of a work area
    shot_work_area_katana:
        definition: '@shot_root/dev/katana'
    # define the location of a publish area
    shot_publish_area_katana:
        definition: '@shot_root/pub/katana'
    # The location of WIP files
    katana_shot_work:
        definition: '@shot_root/dev/katana/{Shot}_{Step}_v{version}[_{name}].katana'
    # The location of backups of WIP files
    katana_shot_snapshot:
        definition: '@shot_root/dev/katana/snapshots/{Shot}_{Step}_v{version}[_{name}].{timestamp}.katana'
    # The location of published maya files
    katana_shot_publish:
        definition: '@shot_root/pub/katana/{Shot}_{Step}_v{version}[_{name}].katana' 

    #
    # 3DE4
    #

    # define the location of a work area
    shot_work_area_3de4:
        definition: '@shot_root/dev/3de4'
    # define the location of a publish area
    shot_publish_area_3de4:
        definition: '@shot_root/pub/3de4'
    # The location of WIP files
    3de4_shot_work:
        definition: '@shot_root/dev/3de4/{Shot}_{Step}_v{version}.3de'
    # The location of backups of WIP files
    3de4_shot_snapshot:
        definition: '@shot_root/dev/3de4/snapshots/{Shot}_{Step}_v{version}.{timestamp}.3de'
    # The location of published maya files
    3de4_shot_publish:
        definition: '@shot_root/pub/3de4/{Shot}_{Step}_v{version}.3de' 


    #
    # Houdini
    #

    # define the location of a work area
    shot_work_area_houdini:
        definition: '@shot_root/dev/houdini'
    # define the location of a publish area
    shot_publish_area_houdini:
        definition: '@shot_root/pub/houdini'
    # The location of WIP files
    houdini_shot_work:
        definition: '@shot_root/dev/houdini/{Shot}_{Step}_v{version}[_{name}].hip'
    # The location of backups of WIP files
    houdini_shot_snapshot:
        definition: '@shot_root/dev/houdini/snapshots/{Shot}_{Step}_v{version}[_{name}].{timestamp}.hip'
    # The location of published houdini files
    houdini_shot_publish:
        definition: '@shot_root/pub/houdini/{Shot}_{Step}_v{version}[_{name}].hip' 
    # Alembic caches
    houdini_shot_work_alembic_cache:
        definition: '@shot_root/dev/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Shot}_{name}_v{version}.abc'

    # Rendered images
    houdini_shot_render:
        definition: '@shot_root/dev/images/{Shot}_{Step}_v{version}[_{name}]/{houdini.node}/v{version}/{Shot}_{Step}_v{version}[_{name}].{SEQ}.exr'

    # Additional mantra outputs
    houdini_shot_ifd:
        definition: '@shot_root/dev/ifds/{Shot}_{Step}_v{version}[_{name}]/{houdini.node}/v{version}/{Shot}_{Step}_v{version}[_{name}].{SEQ}.ifd'

    houdini_shot_dcm:
        definition: '@shot_root/dev/dcms/{Shot}_{Step}_v{version}[_{name}]/{houdini.node}/v{version}/{Shot}_{Step}_v{version}[_{name}].dcm'

    houdini_shot_extra_plane:
        definition: '@shot_root/dev/images/{Shot}_{Step}_v{version}[_{name}]/{houdini.node}/{aov_name}/v{version}/{Shot}_{Step}_v{version}[_{name}].{SEQ}.exr'


    #
    # 3dsmax
    #

    # define the location of a work area
    shot_work_area_max:
        definition: '@shot_root/dev/3dsmax'
    # define the location of a publish area
    shot_publish_area_max:
        definition: '@shot_root/pub/3dsmax'
    # The location of WIP files
    max_shot_work:
        definition: '@shot_root/dev/3dsmax/{name}.v{version}.max'
    # The location of backups of WIP files
    max_shot_snapshot:
        definition: '@shot_root/dev/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'
    # The location of published max files
    max_shot_publish:
        definition: '@shot_root/pub/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # define the location of a work area
    shot_work_area_mobu:
        definition: '@shot_root/dev/mobu'
    # define the location of a publish area
    shot_publish_area_mobu:
        definition: '@shot_root/pub/mobu'
    # The location of WIP files
    mobu_shot_work:
        definition: '@shot_root/dev/mobu/{name}.v{version}.fbx'
    # The location of backups of WIP files
    mobu_shot_snapshot:
        definition: '@shot_root/dev/mobu/snapshots/{name}.v{version}.{timestamp}.fbx'
    # The location of published mobu files
    mobu_shot_publish:
        definition: '@shot_root/pub/mobu/{name}.v{version}.fbx'


    #
    # Nuke
    #

    # define the location of a work area
    shot_work_area_nuke:
        definition: '@shot_root/dev/nuke'
    # define the location of a publish area
    shot_publish_area_nuke:
        definition: '@shot_root/pub/nuke'
    # The location of WIP script files
    nuke_shot_work:
        definition: '@shot_root/dev/nuke/{Shot}_{task_name}_v{version}[_{name}].nk'
    # The location of backups of WIP files
    nuke_shot_snapshot:
        definition: '@shot_root/dev/nuke/snapshots/{Shot}_{Step}_v{version}[_{name}].{timestamp}.nk'
    # The location of published nuke script files
    nuke_shot_publish:
        definition: '@shot_root/pub/nuke/{Shot}_{Step}_v{version}[_{name}].nk'
    # write node outputs
    nuke_shot_render_mono_dpx:
        definition: '@shot_root/dev/images/v{version}/{Shot}_{nuke.output}_v{version}.{SEQ}.dpx'
    nuke_shot_render_pub_mono_dpx:
        definition: '@shot_root/pub/images/v{version}/{Shot}_{nuke.output}_v{version}.{SEQ}.dpx'
    nuke_shot_render_stereo:
        definition: '@shot_root/dev/images/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr'
    nuke_shot_render_pub_stereo:
        definition: '@shot_root/pub/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr'
    nuke_shot_render_dev_exr:
        definition: '@shot_root/dev/images/v{version}/{Shot}_{nuke.output}_v{version}[_{name}].{SEQ}.exr'
    nuke_shot_render_pub_exr:
        definition: '@shot_root/pub/images/v{version}/{Shot}_{nuke.output}_v{version}[_{name}].{SEQ}.exr'
    nuke_shot_render_dev_mov:
        definition: '@shot_root/dev/images/v{version}/{Shot}_{nuke.output}_v{version}[_{name}].{SEQ}.mov'
    nuke_shot_render_pub_mov:
        definition: '@shot_root/pub/images/v{version}/{Shot}_{nuke.output}_v{version}[_{name}].{SEQ}.mov'
    #WESTWORLD START
    nuke_write_node_exr:
        definition: '@shot_root/dev/nuke/write/{Shot}_{task_name}_v{version}[_{name}]/{Shot}_{task_name}_v{version}[_{name}].{SEQ}.exr'
    nuke_write_node_dpx:
        definition: '@shot_root/dev/nuke/write/{Shot}_{task_name}_v{version}[_{name}]/{Shot}_{task_name}_v{version}[_{name}].{SEQ}.dpx'
    nuke_write_node_jpg:
        definition: '@shot_root/dev/nuke/write/{Shot}_{Step}_v{version}[_{name}]/{Shot}_{Step}_v{version}[_{name}].{SEQ}.jpg'
    nuke_write_node_mov:
        definition: '@shot_root/dev/nuke/write/{Shot}_{Step}_v{version}[_{name}].mov'
    nuke_write_precomp_exr:
        definition: '@shot_root/dev/precomp/wip/{Shot}_{Step}_v{version}[_{name}]/{Shot}_{Step}_v{version}[_{name}].{SEQ}.exr'
    nuke_write_precomp_dpx:
        definition: '@shot_root/dev/precomp/wip/{Shot}_{Step}_v{version}[_{name}]/{Shot}_{Step}_v{version}[_{name}].{SEQ}.dpx'
    nuke_write_comp_precomp_exr:
        definition: '@shot_root/dev/nuke/precomp/{Shot}_{Step}_v{version}[_{name}]_precomp/{Shot}_{Step}_v{version}[_{name}]_precomp.{SEQ}.exr'
    nuke_write_comp_precomp_dpx:
        definition: '@shot_root/dev/nuke/precomp/{Shot}_{Step}_v{version}[_{name}]_precomp/{Shot}_{Step}_v{version}[_{name}]_precomp.{SEQ}.dpx'
    # review output
    shot_quicktime_quick:
        definition: '@shot_root/review/quickdaily/{Shot}_{name}_{iteration}.mov'
    nuke_shot_render_movie:
        definition: '@shot_root/review/{Shot}_{nuke.output}_v{version}.mov'
    plate_exr:
        definition: 'seq/{Sequence}/{Shot}/plate/org/v{version}/{Shot}_org_v{version_two}.{SEQ}.exr'
    source_exr:
        definition: 'seq/{Sequence}/{Shot}/plate/src{number}/v{version}/{Shot}_org_v{version_two}.{SEQ}.exr'
    plate_dpx:
        definition: 'seq/{Sequence}/{Shot}/plate/org/v{version}/{Shot}_org_v{version_two}.{SEQ}.dpx'
    source_dpx:
        definition: 'seq/{Sequence}/{Shot}/plate/src{number}/v{version}/{Shot}_org_v{version_two}.{SEQ}.dpx'

    plate_exr3:
        definition: 'seq/{Sequence}/{Shot}/plate/org/v{version}/{Shot}_org_v{version}.{SEQ}.exr'
    source_exr3:
        definition: 'seq/{Sequence}/{Shot}/plate/src{number}/v{version}/{Shot}_org_v{version}.{SEQ}.exr'
    plate_dpx3:
        definition: 'seq/{Sequence}/{Shot}/plate/org/v{version}/{Shot}_org_v{version}.{SEQ}.dpx'
    source_dpx3:
        definition: 'seq/{Sequence}/{Shot}/plate/src{number}/v{version}/{Shot}_org_v{version}.{SEQ}.dpx'

    #
    # Hiero
    #

    # export of shot asset data from hiero
    hiero_plate_path:
        definition: 'sequences/{Sequence}/{Shot}/editorial/{YYYY}_{MM}_{DD}/plates/{project}_{Shot}.mov'
    hiero_render_path:
        definition: 'sequences/{Sequence}/{Shot}/editorial/{YYYY}_{MM}_{DD}/renders/{project}_{Shot}.{SEQ}.dpx'

    ##########################################################################################
    # Asset pipeline


    #
    # Alembic caches
    #

    asset_alembic_cache:
        definition: '@asset_root/pub/caches/{Asset}.v{version}.abc'
    
    

    #2021 WESTWORLD USD PIPELINE
    
    usd_asset_root:
        definition: '_3d/assets/{Asset}/{Asset}.usd'
    usd_asset_step:
        definition: '_3d/assets/{Asset}/{Step}/{Step}.usd'
    usd_asset_step_version:
        definition: '_3d/assets/{Asset}/{Step}/v{version}/{Asset}_{Step}.usd'
    usd_asset_texture_path:
        definition: "_3d/assets/{Asset}/binder/v{version}/{Asset}_collection.usd"

    #westworld cache type

    asset_component_alembic:
        definition: '@asset_root/pub/caches/abc/{Asset}_{Step}_v{version}[_{name}].abc'
    asset_component_alembic_for_mari:
        definition: '@asset_root/pub/caches/abc_mari/{Asset}_{Step}_v{version}[_{name}].abc'
    asset_cmpt_asmb_usd:
        definition: '@asset_root/pub/caches/usd/{Asset}_{Step}_v{version}[_{name}].usd'
    asset_scenegraphXML:
        definition: '@asset_root/pub/caches/xml/{Asset}_{Step}_v{version}.xml'
    asset_yeticache:
        definition: '@asset_root/pub/caches/yeti/{Asset}_{Step}_v{version}/{name}/{name}.fur'

    shot_component_alembic:
        definition: '@shot_root/pub/caches/abc/{asset_namespace}_{Step}_v{version}[_{name}].abc'
    shot_cmpt_asmb_usd:
        definition: '@shot_root/pub/caches/usd/{asset_namespace}_{Step}_v{version}[_{name}].usd'
    shot_component_xml:
        definition: '@shot_root/pub/caches/xml/{asset_namespace}_{Step}_v{version}.xml'
    shot_component_alembic_for_mari:
        definition: '@shot_root/pub/caches/abc_mari/{name}_{Step}_v{version}[_{name}].abc'
    shot_usd:
        definition: '@shot_root/pub/caches/usd/{Shot}_{Step}_v{version}[_{name}].usd'
    shot_scenegraphXML:
        definition: '@shot_root/pub/caches/xml/{Shot}_{Step}_v{version}[_{name}].xml'
    shot_scenegraphXML:
        definition: '@shot_root/pub/caches/xml/{Shot}_{Step}_v{version}[_{name}].xml'
    shot_camera_dummy:
        definition: '@shot_root/pub/caches/{shot_file_extension}/{name}_{Step}_v{version}[_{name}].{shot_file_extension}'
    shot_yeticache:
        definition: '@shot_root/pub/caches/yeti/{Shot}_{Step}_v{version}/{asset_namespace}/{name}/{name}.{SEQ}.fur'

    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_asset_work:
        definition: '@asset_root/dev/photoshop/{Asset}_{Step}_v{version}[_{name}].psd'
    asset_work_area_photoshop:
        definition: '@asset_root/dev/photoshop'
    # The location of backups of WIP files
    photoshop_asset_snapshot:
        definition: '@asset_root/dev/photoshop/snapshots/{Asset}_{Step}_v{version}[_{name}].{timestamp}.psd'
    # The location of published files
    asset_publish_area_photoshop:
        definition: '@asset_root/pub/photoshop'
    photoshop_asset_publish:
        definition: '@asset_root/pub/photoshop/{Asset}_{Step}_v{version}[_{name}].psd'


    #
    # Mari
    #
    asset_mari_texture_tif:
        definition: '@asset_root/pub/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif'

    #
    # Maya
    #

    # define the location of a work area
    asset_work_area_maya:
        definition: '@asset_root/dev/maya'
    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_root/pub/maya'
    # The location of WIP files
    maya_asset_work:
        definition: '@asset_root/dev/maya/{Asset}_{Step}_v{version}[_{name}].{maya_extension}'
    # The location of backups of WIP files
    maya_asset_snapshot:
        definition: '@asset_root/dev/maya/snapshots/{Asset}_{Step}_v{version}[_{name}].{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_asset_publish:
        definition: '@asset_root/pub/maya/{Asset}_{Step}_v{version}[_{name}].{maya_extension}'
    maya_asset_prescript:
        definition: '@asset_root/pub/maya/{Asset}_{Step}_v{version}[_{name}].py'

    maya_asset_mov:
        definition: '@asset_root/pub/preview/{Asset}_{Step}_v{version}[_{name}].mp4' 

    #
    # Katana
    #

    # define the location of a work area
    asset_work_area_katana:
        definition: '@asset_root/dev/katana'
    # define the location of a publish area
    asset_publish_area_katana:
        definition: '@asset_root/pub/katana'
    # The location of WIP files
    katana_asset_work:
        definition: '@asset_root/dev/katana/{Asset}_{Step}_v{version}[_{name}].katana'
    # The location of backups of WIP files
    katana_asset_snapshot:
        definition: '@asset_root/dev/katana/snapshots/{Asset}_{Step}_v{version}[_{name}].{timestamp}.katana'
    # The location of published maya files
    katana_asset_publish:
        definition: '@asset_root/pub/katana/{Asset}_{Step}_v{version}[_{name}].katana'

    #
    # Houdini
    #

    # define the location of a work area
    asset_work_area_houdini:
        definition: '@asset_root/dev/houdini'
    # define the location of a publish area
    asset_publish_area_houdini:
        definition: '@asset_root/pub/houdini'
    # The location of WIP files
    houdini_asset_work:
        definition: '@asset_root/dev/houdini/{Asset}_{Step}_v{version}[_{name}].hip'
    # The location of backups of WIP files
    houdini_asset_snapshot:
        definition: '@asset_root/dev/houdini/snapshots/{Asset}_{Step}_v{version}[_{name}].{timestamp}.hip'
    # The location of published houdini files
    houdini_asset_publish:
        definition: '@asset_root/pub/houdini/{Asset}_{Step}_v{version}[_{name}].hip'
    # Alembic caches
    houdini_asset_work_alembic_cache:
        definition: '@asset_root/dev/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Asset}_{name}_v{version}.abc'

    # Rendered images
    houdini_asset_render:
        definition: '@asset_root/dev/images/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr'

    # Additional mantra outputs
    houdini_asset_ifd:
        definition: '@asset_root/dev/ifds/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.ifd'

    houdini_asset_dcm:
        definition: '@asset_root/dev/dcms/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.dcm'

    houdini_asset_extra_plane:
        definition: '@asset_root/dev/images/{name}/{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr'


    #
    # 3dsmax
    #

    # define the location of a work area
    asset_work_area_max:
        definition: '@asset_root/dev/3dsmax'
    # define the location of a publish area
    asset_publish_area_max:
        definition: '@asset_root/pub/3dsmax'
    # The location of WIP files
    max_asset_work:
        definition: '@asset_root/dev/3dsmax/{name}.v{version}.max'
    # The location of backups of WIP files
    max_asset_snapshot:
        definition: '@asset_root/dev/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'
    # The location of published max files
    max_asset_publish:
        definition: '@asset_root/pub/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # define the location of a work area
    asset_work_area_mobu:
        definition: '@asset_root/dev/mobu'
    # define the location of a publish area
    asset_publish_area_mobu:
        definition: '@asset_root/pub/mobu'
    # The location of WIP files
    mobu_asset_work:
        definition: '@asset_root/dev/mobu/{name}.v{version}.fbx'
    # The location of backups of WIP files
    mobu_asset_snapshot:
        definition: '@asset_root/dev/mobu/snapshots/{name}.v{version}.{timestamp}.fbx'
    # The location of published Motionbuilder files
    mobu_asset_publish:
        definition: '@asset_root/pub/mobu/{name}.v{version}.fbx'


    #
    # Nuke
    #

    # define the location of a work area
    asset_work_area_nuke:
        definition: '@asset_root/dev/nuke'
    # define the location of a publish area
    asset_publish_area_nuke:
        definition: '@asset_root/pub'
    # outputs from the Shotgun Write Node for assets
    nuke_asset_render:
        definition: '@asset_root/dev/images/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    nuke_asset_render_pub:
        definition: '@asset_root/pub/elements/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    # review output
    nuke_asset_render_movie:
        definition: '@asset_root/review/{Asset}_{name}_{nuke.output}_v{version}.mov'
    asset_quicktime_quick:
        definition: '@asset_root/review/quickdaily/{Asset}_{name}_{iteration}.mov'
    # The location of WIP script files
    nuke_asset_work:
        definition: '@asset_root/dev/nuke/{name}.v{version}.nk'
    # The location of backups of WIP files
    nuke_asset_snapshot:
        definition: '@asset_root/dev/nuke/snapshots/{name}.v{version}.{timestamp}.nk'
    # The location of published nuke script files
    nuke_asset_publish:
        definition: '@asset_root/pub/nuke/{name}.v{version}.nk'

  
    #
    # Clarisse
    #

    # asset
    # define the location of a work area
    asset_work_area_clarisse:
        definition: '@asset_root/dev/clarisse'
        root_name: 'primary'
    # define the location of a publish area
    asset_publish_area_clarisse:
        definition: '@asset_root/pub/clarisse'
        root_name: 'primary'

    # The location of WIP files
    clarisse_asset_work:
        definition: '@asset_root/dev/clarisse/{Asset}_{Step}_v{version}[_{name}].project'
        root_name: 'primary'
    # The location of backups of WIP files
    clarisse_asset_snapshot:
        definition: '@asset_root/dev/clarisse/snapshot/{Asset}_{Step}_v{version}[_{name}].{timestamp}.project'
        root_name: 'primary'
    # The location of published clarisse files
    clarisse_asset_publish:
        definition: '@asset_root/pub/clarisse/{Asset}_{Step}_v{version}[_{name}].project'
        root_name: 'primary'
 
    # shot 
    # define the location of a work area
    shot_work_area_clarisse:
        definition: '@shot_root/dev/clarisse'
        root_name: 'primary'
    # define the location of a publish area
    shot_publish_area_clarisse:
        definition: '@shot_root/pub/clarisse'
        root_name: 'primary'
    # The location of WIP files
    clarisse_shot_work:
        definition: '@shot_root/dev/clarisse/{Shot}_{Step}_v{version}[_{name}].project'
        root_name: 'primary'
    # The location of backups of WIP files
    clarisse_shot_snapshot:
        definition: '@shot_root/dev/clarisse/snapshot/{Shot}_{Step}_v{version}[_{name}].{timestamp}.project'
        root_name: 'primary'
    # The location of published clarisse files
    clarisse_shot_publish:
        definition: '@shot_root/pub/clarisse/{Shot}_{Step}_v{version}[_{name}].project'
        root_name: 'primary'

    # sequence 
    # define the location of a work area
    sequence_work_area_clarisse:
        definition: '@sequence_root/dev/clarisse'
        root_name: 'primary'
    # define the location of a publish area
    sequence_publish_area_clarisse:
        definition: '@sequence_root/pub/clarisse'
        root_name: 'primary'
    # The location of WIP files
    clarisse_sequence_work:
        definition: '@sequence_root/dev/clarisse/{name}.v{version}.project'
        root_name: 'primary'
    # The location of backups of WIP files
    clarisse_sequence_snapshot:
        definition: '@sequence_root/dev/clarisse/snapshots/{name}.v{version}.{timestamp}.project'
        root_name: 'primary'
    # The location of published clarisse files
    clarisse_sequence_publish:
        definition: '@sequence_root/pub/clarisse/{name}.v{version}.project'
        root_name: 'primary'


    #
    # Unreal
    #

    # level sequence review output from unreal

    unreal_asset_publish:
        definition: 'assets/unreal/exports/{YYYY}_{MM}_{DD}/{name}.fbx'
    unreal_movie_publish:
        definition: '[sequences/{Sequence}/][{Shot}/]editorial/{YYYY}_{MM}_{DD}/unreal/{level_sequence}_{world}.v{version}.avi'
    unreal_shot_publish:
        definition: '@shot_root/publish/unreal/{name}.v{version}.nk'
    maya_asset_fbx_publish:
        definition: '@asset_root/pub/caches/fbx/{Asset}_{Step}_v{version}[_{name}].fbx'
    # The location of turntable review output rendered in Unreal
    maya_ue4_turntable_render:
        definition: '@asset_root/dev/images/{Asset}_{Step}_v{version}[_{name}].avi'
    maya_ue4_turntable_publish:
        definition: '@asset_root/review/{Asset}_{Step}_v{version}[_{name}].avi'


#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

    # defines how the {tk_version} token in Hiero gets formatted back to tk.
    hiero_version: "{version}"

    # define how new Mari projects should be named
    mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"

    # entity-specific templates for importing files into the Unreal content browser
    # template logic is defined in Python, not settings:
    # tk-unreal/hooks/tk-multi-loader2/tk-unreal_actions.py
    unreal_loader_asset_path: "/Game/Assets/{sg_asset_type_ue4}/{sg_asset_name}/"
    unreal_loader_asset_name: "{sg_asset_name}_{name}"
    unreal_loader_shot_path: "/Game/Cinematics/Sequences/{sg_sequence_name}/{sg_shot_name}/"
    unreal_loader_shot_name: "{sg_shot_name}_{name}"
    unreal_loader_project_path: "/Game/Assets/"
    unreal_loader_project_name: "{name}"
